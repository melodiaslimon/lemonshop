(function(){"use strict";try{if(typeof document<"u"){var o=document.createElement("style");o.appendChild(document.createTextNode('.image-tool{--bg-color: #cdd1e0;--front-color: #388ae5;--border-color: #e8e8eb}.image-tool__image{border-radius:3px;overflow:hidden;margin-bottom:10px;padding-bottom:0}.image-tool__image-picture{max-width:100%;vertical-align:bottom;display:block}.image-tool__image-preloader{width:50px;height:50px;border-radius:50%;background-size:cover;margin:auto;position:relative;background-color:var(--bg-color);background-position:center center}.image-tool__image-preloader:after{content:"";position:absolute;z-index:3;width:60px;height:60px;border-radius:50%;border:2px solid var(--bg-color);border-top-color:var(--front-color);left:50%;top:50%;margin-top:-30px;margin-left:-30px;animation:image-preloader-spin 2s infinite linear;box-sizing:border-box}.image-tool__caption{visibility:hidden;position:absolute;bottom:0;left:0;margin-bottom:10px}.image-tool__caption[contentEditable=true][data-placeholder]:before{position:absolute!important;content:attr(data-placeholder);color:#707684;font-weight:400;display:none}.image-tool__caption[contentEditable=true][data-placeholder]:empty:before{display:block}.image-tool__caption[contentEditable=true][data-placeholder]:empty:focus:before{display:none}.image-tool__link{visibility:hidden;position:absolute;bottom:0;left:0;margin-bottom:10px;margin-top:5px}.image-tool__link[contentEditable=true][data-placeholder]:before{position:absolute!important;content:attr(data-placeholder);color:#707684;font-weight:400;display:none}.image-tool__link[contentEditable=true][data-placeholder]:empty:before{display:block}.image-tool__link[contentEditable=true][data-placeholder]:empty:focus:before{display:none}.image-tool--empty .image-tool__image,.image-tool--empty .image-tool__image-preloader{display:none}.image-tool--empty .image-tool__caption,.image-tool--empty .image-tool__link,.image-tool--uploading .image-tool__caption,.image-tool--uploading .image-tool__link{visibility:hidden!important}.image-tool .cdx-button{display:flex;align-items:center;justify-content:center}.image-tool .cdx-button svg{height:auto;margin:0 6px 0 0}.image-tool--with-background .image-tool__image{padding:15px;background:var(--bg-color);border-radius:5px}.image-tool--stretched .image-tool__image{max-width:none;width:100%}.image-tool--with-background .image-tool__image-picture{width:100%}.image-tool--with-border .image-tool__image{border:1px solid var(--border-color)}.image-tool--focused .image-tool__caption,.image-tool--focused .image-tool__link{visibility:visible!important;position:relative}.image-tool--filled .image-tool__caption,.image-tool--filled .image-tool__link{visibility:visible;position:relative}@keyframes image-preloader-spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}')),document.head.appendChild(o)}}catch(e){console.error("vite-plugin-css-injected-by-js",e)}})();
const I = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M11 19V19C9.13623 19 8.20435 19 7.46927 18.6955C6.48915 18.2895 5.71046 17.5108 5.30448 16.5307C5 15.7956 5 14.8638 5 13V12C5 9.19108 5 7.78661 5.67412 6.77772C5.96596 6.34096 6.34096 5.96596 6.77772 5.67412C7.78661 5 9.19108 5 12 5H13.5C14.8956 5 15.5933 5 16.1611 5.17224C17.4395 5.56004 18.44 6.56046 18.8278 7.83886C19 8.40666 19 9.10444 19 10.5V10.5"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 13V16M16 19V16M19 16H16M16 16H13"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6.5 17.5L17.5 6.5"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.9919 10.5H19.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.9919 19H11.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13L13 5"/></svg>', D = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.9919 9.5H19.0015"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.5 5H14.5096"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M14.625 5H15C17.2091 5 19 6.79086 19 9V9.375"/><path stroke="currentColor" stroke-width="2" d="M9.375 5L9 5C6.79086 5 5 6.79086 5 9V9.375"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.3725 5H9.38207"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 9.5H5.00957"/><path stroke="currentColor" stroke-width="2" d="M9.375 19H9C6.79086 19 5 17.2091 5 15V14.625"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9.3725 19H9.38207"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 14.55H5.00957"/><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M16 13V16M16 19V16M19 16H16M16 16H13"/></svg>', H = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><rect width="14" height="14" x="5" y="5" stroke="currentColor" stroke-width="2" rx="4"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5.13968 15.32L8.69058 11.5661C9.02934 11.2036 9.48873 11 9.96774 11C10.4467 11 10.9061 11.2036 11.2449 11.5661L15.3871 16M13.5806 14.0664L15.0132 12.533C15.3519 12.1705 15.8113 11.9668 16.2903 11.9668C16.7693 11.9668 17.2287 12.1705 17.5675 12.533L18.841 13.9634"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13.7778 9.33331H13.7867"/></svg>', U = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 9L20 12L17 15"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 12H20"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 9L4 12L7 15"/><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 12H10"/></svg>', P = '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24"><path stroke="currentColor" stroke-linecap="round" stroke-width="2" d="M8 9V7.2C8 7.08954 8.08954 7 8.2 7L12 7M16 9V7.2C16 7.08954 15.9105 7 15.8 7L12 7M12 7L12 17M12 17H10M12 17H14"/></svg>';
function S(C, i = null, o = {}) {
  const l = document.createElement(C);
  Array.isArray(i) ? l.classList.add(...i) : i !== null && l.classList.add(i);
  for (const e in o)
    o.hasOwnProperty(e) && (l[e] = o[e]);
  return l;
}
var M = /* @__PURE__ */ ((C) => (C.Empty = "empty", C.Uploading = "uploading", C.Filled = "filled", C))(M || {});
class x {
  /**
   * @param ui - image tool Ui module
   * @param ui.api - Editor.js API
   * @param ui.config - user config
   * @param ui.onSelectFile - callback for clicks on Select file button
   * @param ui.readOnly - read-only mode flag
   * @param ui.onImageDimensionsReady - callback for when image dimensions are available
   */
  constructor({
    api: i,
    config: o,
    onSelectFile: l,
    readOnly: e,
    onImageDimensionsReady: n
  }) {
    this.api = i, this.config = o, this.onSelectFile = l, this.readOnly = e, this.onImageDimensionsReady = n, this.nodes = {
      wrapper: S("div", [this.CSS.baseClass, this.CSS.wrapper]),
      imageContainer: S("div", [this.CSS.imageContainer]),
      fileButton: this.createFileButton(),
      imageEl: void 0,
      imagePreloader: S("div", this.CSS.imagePreloader),
      caption: S("div", [this.CSS.input, this.CSS.caption], {
        contentEditable: !this.readOnly
      }),
      link: S("div", [this.CSS.input, this.CSS.link], {
        contentEditable: !this.readOnly
      })
    }, this.nodes.caption.dataset.placeholder = this.config.captionPlaceholder, this.nodes.link.dataset.placeholder = this.config.linkPlaceholder, this.nodes.imageContainer.appendChild(this.nodes.imagePreloader), this.nodes.wrapper.appendChild(this.nodes.imageContainer), this.nodes.wrapper.appendChild(this.nodes.caption), this.nodes.wrapper.appendChild(this.nodes.link), this.nodes.wrapper.appendChild(this.nodes.fileButton);
  }
  /**
   * Apply visual representation of activated tune
   * @param tuneName - one of available tunes {@link Tunes.tunes}
   * @param status - true for enable, false for disable
   */
  applyTune(i, o) {
    this.nodes.wrapper.classList.toggle(
      `${this.CSS.wrapper}--${i}`,
      o
    );
  }
  /**
   * Renders tool UI
   */
  render() {
    return this.toggleStatus(
      "empty"
      /* Empty */
    ), this.nodes.wrapper;
  }
  /**
   * Shows uploading preloader
   * @param src - preview source
   */
  showPreloader(i) {
    this.nodes.imagePreloader.style.backgroundImage = `url(${i})`, this.nodes.imagePreloader.style.display = "block", this.toggleStatus(
      "uploading"
      /* Uploading */
    );
  }
  /**
   * Hide uploading preloader
   */
  hidePreloader() {
    this.nodes.imagePreloader.style.backgroundImage = "", this.toggleStatus(
      "empty"
      /* Empty */
    );
  }
  /**
   * Shows an image
   * @param url - image source
   */
  fillImage(i) {
    this.nodes.imageEl && this.nodes.imageContainer.removeChild(this.nodes.imageEl);
    const o = /\.mp4$/.test(i) ? "VIDEO" : "IMG", l = {
      src: i
    };
    let e = "load";
    o === "VIDEO" && (l.autoplay = !0, l.loop = !0, l.muted = !0, l.playsinline = !0, e = "loadeddata"), this.nodes.imageEl = S(o, this.CSS.imageEl, l), this.nodes.imageEl.addEventListener(e, () => {
      if (this.toggleStatus(
        "filled"
        /* Filled */
      ), this.nodes.imagePreloader !== void 0 && (this.nodes.imagePreloader.style.backgroundImage = "", this.nodes.imagePreloader.style.display = "none"), o === "IMG" && this.onImageDimensionsReady) {
        const n = this.nodes.imageEl, a = n.naturalWidth, s = n.naturalHeight;
        this.onImageDimensionsReady(a, s);
      }
    }), this.nodes.imageContainer.appendChild(this.nodes.imageEl);
  }
  /**
   * Shows caption input
   * @param text - caption content text
   */
  fillCaption(i) {
    this.nodes.caption !== void 0 && (this.nodes.caption.innerHTML = i);
  }
  /**
   * Shows link input
   * @param text - link content text
   */
  fillLink(i) {
    this.nodes.link !== void 0 && (this.nodes.link.innerHTML = i);
  }
  /**
   * Changes UI status
   * @param status - see {@link Ui.status} constants
   */
  toggleStatus(i) {
    for (const o in M)
      if (Object.prototype.hasOwnProperty.call(M, o)) {
        const l = M[o];
        this.nodes.wrapper.classList.toggle(
          `${this.CSS.wrapper}--${l}`,
          l === i
        );
      }
  }
  /**
   * CSS classes
   */
  get CSS() {
    return {
      baseClass: this.api.styles.block,
      loading: this.api.styles.loader,
      input: this.api.styles.input,
      button: this.api.styles.button,
      /**
       * Tool's classes
       */
      wrapper: "image-tool",
      imageContainer: "image-tool__image",
      imagePreloader: "image-tool__image-preloader",
      imageEl: "image-tool__image-picture",
      caption: "image-tool__caption",
      link: "image-tool__link"
    };
  }
  /**
   * Creates upload-file button
   */
  createFileButton() {
    const i = S("div", [this.CSS.button]);
    return i.innerHTML = this.config.buttonContent ?? `${H} ${this.api.i18n.t("Select an Image")}`, i.addEventListener("click", () => {
      this.onSelectFile();
    }), i;
  }
}
function B(C) {
  return C && C.__esModule && Object.prototype.hasOwnProperty.call(C, "default") ? C.default : C;
}
var R = { exports: {} };
(function(C, i) {
  (function(o, l) {
    C.exports = l();
  })(window, function() {
    return function(o) {
      var l = {};
      function e(n) {
        if (l[n]) return l[n].exports;
        var a = l[n] = { i: n, l: !1, exports: {} };
        return o[n].call(a.exports, a, a.exports, e), a.l = !0, a.exports;
      }
      return e.m = o, e.c = l, e.d = function(n, a, s) {
        e.o(n, a) || Object.defineProperty(n, a, { enumerable: !0, get: s });
      }, e.r = function(n) {
        typeof Symbol < "u" && Symbol.toStringTag && Object.defineProperty(n, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(n, "__esModule", { value: !0 });
      }, e.t = function(n, a) {
        if (1 & a && (n = e(n)), 8 & a || 4 & a && typeof n == "object" && n && n.__esModule) return n;
        var s = /* @__PURE__ */ Object.create(null);
        if (e.r(s), Object.defineProperty(s, "default", { enumerable: !0, value: n }), 2 & a && typeof n != "string") for (var p in n) e.d(s, p, (function(u) {
          return n[u];
        }).bind(null, p));
        return s;
      }, e.n = function(n) {
        var a = n && n.__esModule ? function() {
          return n.default;
        } : function() {
          return n;
        };
        return e.d(a, "a", a), a;
      }, e.o = function(n, a) {
        return Object.prototype.hasOwnProperty.call(n, a);
      }, e.p = "", e(e.s = 3);
    }([function(o, l) {
      var e;
      e = /* @__PURE__ */ function() {
        return this;
      }();
      try {
        e = e || new Function("return this")();
      } catch {
        typeof window == "object" && (e = window);
      }
      o.exports = e;
    }, function(o, l, e) {
      (function(n) {
        var a = e(2), s = setTimeout;
        function p() {
        }
        function u(r) {
          if (!(this instanceof u)) throw new TypeError("Promises must be constructed via new");
          if (typeof r != "function") throw new TypeError("not a function");
          this._state = 0, this._handled = !1, this._value = void 0, this._deferreds = [], t(r, this);
        }
        function f(r, d) {
          for (; r._state === 3; ) r = r._value;
          r._state !== 0 ? (r._handled = !0, u._immediateFn(function() {
            var c = r._state === 1 ? d.onFulfilled : d.onRejected;
            if (c !== null) {
              var y;
              try {
                y = c(r._value);
              } catch (g) {
                return void w(d.promise, g);
              }
              h(d.promise, y);
            } else (r._state === 1 ? h : w)(d.promise, r._value);
          })) : r._deferreds.push(d);
        }
        function h(r, d) {
          try {
            if (d === r) throw new TypeError("A promise cannot be resolved with itself.");
            if (d && (typeof d == "object" || typeof d == "function")) {
              var c = d.then;
              if (d instanceof u) return r._state = 3, r._value = d, void k(r);
              if (typeof c == "function") return void t((y = c, g = d, function() {
                y.apply(g, arguments);
              }), r);
            }
            r._state = 1, r._value = d, k(r);
          } catch (m) {
            w(r, m);
          }
          var y, g;
        }
        function w(r, d) {
          r._state = 2, r._value = d, k(r);
        }
        function k(r) {
          r._state === 2 && r._deferreds.length === 0 && u._immediateFn(function() {
            r._handled || u._unhandledRejectionFn(r._value);
          });
          for (var d = 0, c = r._deferreds.length; d < c; d++) f(r, r._deferreds[d]);
          r._deferreds = null;
        }
        function v(r, d, c) {
          this.onFulfilled = typeof r == "function" ? r : null, this.onRejected = typeof d == "function" ? d : null, this.promise = c;
        }
        function t(r, d) {
          var c = !1;
          try {
            r(function(y) {
              c || (c = !0, h(d, y));
            }, function(y) {
              c || (c = !0, w(d, y));
            });
          } catch (y) {
            if (c) return;
            c = !0, w(d, y);
          }
        }
        u.prototype.catch = function(r) {
          return this.then(null, r);
        }, u.prototype.then = function(r, d) {
          var c = new this.constructor(p);
          return f(this, new v(r, d, c)), c;
        }, u.prototype.finally = a.a, u.all = function(r) {
          return new u(function(d, c) {
            if (!r || r.length === void 0) throw new TypeError("Promise.all accepts an array");
            var y = Array.prototype.slice.call(r);
            if (y.length === 0) return d([]);
            var g = y.length;
            function m(_, E) {
              try {
                if (E && (typeof E == "object" || typeof E == "function")) {
                  var T = E.then;
                  if (typeof T == "function") return void T.call(E, function(j) {
                    m(_, j);
                  }, c);
                }
                y[_] = E, --g == 0 && d(y);
              } catch (j) {
                c(j);
              }
            }
            for (var b = 0; b < y.length; b++) m(b, y[b]);
          });
        }, u.resolve = function(r) {
          return r && typeof r == "object" && r.constructor === u ? r : new u(function(d) {
            d(r);
          });
        }, u.reject = function(r) {
          return new u(function(d, c) {
            c(r);
          });
        }, u.race = function(r) {
          return new u(function(d, c) {
            for (var y = 0, g = r.length; y < g; y++) r[y].then(d, c);
          });
        }, u._immediateFn = typeof n == "function" && function(r) {
          n(r);
        } || function(r) {
          s(r, 0);
        }, u._unhandledRejectionFn = function(r) {
          typeof console < "u" && console && console.warn("Possible Unhandled Promise Rejection:", r);
        }, l.a = u;
      }).call(this, e(5).setImmediate);
    }, function(o, l, e) {
      l.a = function(n) {
        var a = this.constructor;
        return this.then(function(s) {
          return a.resolve(n()).then(function() {
            return s;
          });
        }, function(s) {
          return a.resolve(n()).then(function() {
            return a.reject(s);
          });
        });
      };
    }, function(o, l, e) {
      function n(t) {
        return (n = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(r) {
          return typeof r;
        } : function(r) {
          return r && typeof Symbol == "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
        })(t);
      }
      e(4);
      var a, s, p, u, f, h, w, k = e(8), v = (s = function(t) {
        return new Promise(function(r, d) {
          t = u(t), (t = f(t)).beforeSend && t.beforeSend();
          var c = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject("Microsoft.XMLHTTP");
          c.open(t.method, t.url), c.setRequestHeader("X-Requested-With", "XMLHttpRequest"), Object.keys(t.headers).forEach(function(g) {
            var m = t.headers[g];
            c.setRequestHeader(g, m);
          });
          var y = t.ratio;
          c.upload.addEventListener("progress", function(g) {
            var m = Math.round(g.loaded / g.total * 100), b = Math.ceil(m * y / 100);
            t.progress(Math.min(b, 100));
          }, !1), c.addEventListener("progress", function(g) {
            var m = Math.round(g.loaded / g.total * 100), b = Math.ceil(m * (100 - y) / 100) + y;
            t.progress(Math.min(b, 100));
          }, !1), c.onreadystatechange = function() {
            if (c.readyState === 4) {
              var g = c.response;
              try {
                g = JSON.parse(g);
              } catch {
              }
              var m = k.parseHeaders(c.getAllResponseHeaders()), b = { body: g, code: c.status, headers: m };
              w(c.status) ? r(b) : d(b);
            }
          }, c.send(t.data);
        });
      }, p = function(t) {
        return t.method = "POST", s(t);
      }, u = function() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        if (t.url && typeof t.url != "string") throw new Error("Url must be a string");
        if (t.url = t.url || "", t.method && typeof t.method != "string") throw new Error("`method` must be a string or null");
        if (t.method = t.method ? t.method.toUpperCase() : "GET", t.headers && n(t.headers) !== "object") throw new Error("`headers` must be an object or null");
        if (t.headers = t.headers || {}, t.type && (typeof t.type != "string" || !Object.values(a).includes(t.type))) throw new Error("`type` must be taken from module's «contentType» library");
        if (t.progress && typeof t.progress != "function") throw new Error("`progress` must be a function or null");
        if (t.progress = t.progress || function(r) {
        }, t.beforeSend = t.beforeSend || function(r) {
        }, t.ratio && typeof t.ratio != "number") throw new Error("`ratio` must be a number");
        if (t.ratio < 0 || t.ratio > 100) throw new Error("`ratio` must be in a 0-100 interval");
        if (t.ratio = t.ratio || 90, t.accept && typeof t.accept != "string") throw new Error("`accept` must be a string with a list of allowed mime-types");
        if (t.accept = t.accept || "*/*", t.multiple && typeof t.multiple != "boolean") throw new Error("`multiple` must be a true or false");
        if (t.multiple = t.multiple || !1, t.fieldName && typeof t.fieldName != "string") throw new Error("`fieldName` must be a string");
        return t.fieldName = t.fieldName || "files", t;
      }, f = function(t) {
        switch (t.method) {
          case "GET":
            var r = h(t.data, a.URLENCODED);
            delete t.data, t.url = /\?/.test(t.url) ? t.url + "&" + r : t.url + "?" + r;
            break;
          case "POST":
          case "PUT":
          case "DELETE":
          case "UPDATE":
            var d = function() {
              return (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).type || a.JSON;
            }(t);
            (k.isFormData(t.data) || k.isFormElement(t.data)) && (d = a.FORM), t.data = h(t.data, d), d !== v.contentType.FORM && (t.headers["content-type"] = d);
        }
        return t;
      }, h = function() {
        var t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
        switch (arguments.length > 1 ? arguments[1] : void 0) {
          case a.URLENCODED:
            return k.urlEncode(t);
          case a.JSON:
            return k.jsonEncode(t);
          case a.FORM:
            return k.formEncode(t);
          default:
            return t;
        }
      }, w = function(t) {
        return t >= 200 && t < 300;
      }, { contentType: a = { URLENCODED: "application/x-www-form-urlencoded; charset=utf-8", FORM: "multipart/form-data", JSON: "application/json; charset=utf-8" }, request: s, get: function(t) {
        return t.method = "GET", s(t);
      }, post: p, transport: function(t) {
        return t = u(t), k.selectFiles(t).then(function(r) {
          for (var d = new FormData(), c = 0; c < r.length; c++) d.append(t.fieldName, r[c], r[c].name);
          k.isObject(t.data) && Object.keys(t.data).forEach(function(g) {
            var m = t.data[g];
            d.append(g, m);
          });
          var y = t.beforeSend;
          return t.beforeSend = function() {
            return y(r);
          }, t.data = d, p(t);
        });
      }, selectFiles: function(t) {
        return delete (t = u(t)).beforeSend, k.selectFiles(t);
      } });
      o.exports = v;
    }, function(o, l, e) {
      e.r(l);
      var n = e(1);
      window.Promise = window.Promise || n.a;
    }, function(o, l, e) {
      (function(n) {
        var a = n !== void 0 && n || typeof self < "u" && self || window, s = Function.prototype.apply;
        function p(u, f) {
          this._id = u, this._clearFn = f;
        }
        l.setTimeout = function() {
          return new p(s.call(setTimeout, a, arguments), clearTimeout);
        }, l.setInterval = function() {
          return new p(s.call(setInterval, a, arguments), clearInterval);
        }, l.clearTimeout = l.clearInterval = function(u) {
          u && u.close();
        }, p.prototype.unref = p.prototype.ref = function() {
        }, p.prototype.close = function() {
          this._clearFn.call(a, this._id);
        }, l.enroll = function(u, f) {
          clearTimeout(u._idleTimeoutId), u._idleTimeout = f;
        }, l.unenroll = function(u) {
          clearTimeout(u._idleTimeoutId), u._idleTimeout = -1;
        }, l._unrefActive = l.active = function(u) {
          clearTimeout(u._idleTimeoutId);
          var f = u._idleTimeout;
          f >= 0 && (u._idleTimeoutId = setTimeout(function() {
            u._onTimeout && u._onTimeout();
          }, f));
        }, e(6), l.setImmediate = typeof self < "u" && self.setImmediate || n !== void 0 && n.setImmediate || this && this.setImmediate, l.clearImmediate = typeof self < "u" && self.clearImmediate || n !== void 0 && n.clearImmediate || this && this.clearImmediate;
      }).call(this, e(0));
    }, function(o, l, e) {
      (function(n, a) {
        (function(s, p) {
          if (!s.setImmediate) {
            var u, f, h, w, k, v = 1, t = {}, r = !1, d = s.document, c = Object.getPrototypeOf && Object.getPrototypeOf(s);
            c = c && c.setTimeout ? c : s, {}.toString.call(s.process) === "[object process]" ? u = function(m) {
              a.nextTick(function() {
                g(m);
              });
            } : function() {
              if (s.postMessage && !s.importScripts) {
                var m = !0, b = s.onmessage;
                return s.onmessage = function() {
                  m = !1;
                }, s.postMessage("", "*"), s.onmessage = b, m;
              }
            }() ? (w = "setImmediate$" + Math.random() + "$", k = function(m) {
              m.source === s && typeof m.data == "string" && m.data.indexOf(w) === 0 && g(+m.data.slice(w.length));
            }, s.addEventListener ? s.addEventListener("message", k, !1) : s.attachEvent("onmessage", k), u = function(m) {
              s.postMessage(w + m, "*");
            }) : s.MessageChannel ? ((h = new MessageChannel()).port1.onmessage = function(m) {
              g(m.data);
            }, u = function(m) {
              h.port2.postMessage(m);
            }) : d && "onreadystatechange" in d.createElement("script") ? (f = d.documentElement, u = function(m) {
              var b = d.createElement("script");
              b.onreadystatechange = function() {
                g(m), b.onreadystatechange = null, f.removeChild(b), b = null;
              }, f.appendChild(b);
            }) : u = function(m) {
              setTimeout(g, 0, m);
            }, c.setImmediate = function(m) {
              typeof m != "function" && (m = new Function("" + m));
              for (var b = new Array(arguments.length - 1), _ = 0; _ < b.length; _++) b[_] = arguments[_ + 1];
              var E = { callback: m, args: b };
              return t[v] = E, u(v), v++;
            }, c.clearImmediate = y;
          }
          function y(m) {
            delete t[m];
          }
          function g(m) {
            if (r) setTimeout(g, 0, m);
            else {
              var b = t[m];
              if (b) {
                r = !0;
                try {
                  (function(_) {
                    var E = _.callback, T = _.args;
                    switch (T.length) {
                      case 0:
                        E();
                        break;
                      case 1:
                        E(T[0]);
                        break;
                      case 2:
                        E(T[0], T[1]);
                        break;
                      case 3:
                        E(T[0], T[1], T[2]);
                        break;
                      default:
                        E.apply(p, T);
                    }
                  })(b);
                } finally {
                  y(m), r = !1;
                }
              }
            }
          }
        })(typeof self > "u" ? n === void 0 ? this : n : self);
      }).call(this, e(0), e(7));
    }, function(o, l) {
      var e, n, a = o.exports = {};
      function s() {
        throw new Error("setTimeout has not been defined");
      }
      function p() {
        throw new Error("clearTimeout has not been defined");
      }
      function u(c) {
        if (e === setTimeout) return setTimeout(c, 0);
        if ((e === s || !e) && setTimeout) return e = setTimeout, setTimeout(c, 0);
        try {
          return e(c, 0);
        } catch {
          try {
            return e.call(null, c, 0);
          } catch {
            return e.call(this, c, 0);
          }
        }
      }
      (function() {
        try {
          e = typeof setTimeout == "function" ? setTimeout : s;
        } catch {
          e = s;
        }
        try {
          n = typeof clearTimeout == "function" ? clearTimeout : p;
        } catch {
          n = p;
        }
      })();
      var f, h = [], w = !1, k = -1;
      function v() {
        w && f && (w = !1, f.length ? h = f.concat(h) : k = -1, h.length && t());
      }
      function t() {
        if (!w) {
          var c = u(v);
          w = !0;
          for (var y = h.length; y; ) {
            for (f = h, h = []; ++k < y; ) f && f[k].run();
            k = -1, y = h.length;
          }
          f = null, w = !1, function(g) {
            if (n === clearTimeout) return clearTimeout(g);
            if ((n === p || !n) && clearTimeout) return n = clearTimeout, clearTimeout(g);
            try {
              n(g);
            } catch {
              try {
                return n.call(null, g);
              } catch {
                return n.call(this, g);
              }
            }
          }(c);
        }
      }
      function r(c, y) {
        this.fun = c, this.array = y;
      }
      function d() {
      }
      a.nextTick = function(c) {
        var y = new Array(arguments.length - 1);
        if (arguments.length > 1) for (var g = 1; g < arguments.length; g++) y[g - 1] = arguments[g];
        h.push(new r(c, y)), h.length !== 1 || w || u(t);
      }, r.prototype.run = function() {
        this.fun.apply(null, this.array);
      }, a.title = "browser", a.browser = !0, a.env = {}, a.argv = [], a.version = "", a.versions = {}, a.on = d, a.addListener = d, a.once = d, a.off = d, a.removeListener = d, a.removeAllListeners = d, a.emit = d, a.prependListener = d, a.prependOnceListener = d, a.listeners = function(c) {
        return [];
      }, a.binding = function(c) {
        throw new Error("process.binding is not supported");
      }, a.cwd = function() {
        return "/";
      }, a.chdir = function(c) {
        throw new Error("process.chdir is not supported");
      }, a.umask = function() {
        return 0;
      };
    }, function(o, l, e) {
      function n(s, p) {
        for (var u = 0; u < p.length; u++) {
          var f = p[u];
          f.enumerable = f.enumerable || !1, f.configurable = !0, "value" in f && (f.writable = !0), Object.defineProperty(s, f.key, f);
        }
      }
      var a = e(9);
      o.exports = function() {
        function s() {
          (function(h, w) {
            if (!(h instanceof w)) throw new TypeError("Cannot call a class as a function");
          })(this, s);
        }
        var p, u, f;
        return p = s, f = [{ key: "urlEncode", value: function(h) {
          return a(h);
        } }, { key: "jsonEncode", value: function(h) {
          return JSON.stringify(h);
        } }, { key: "formEncode", value: function(h) {
          if (this.isFormData(h)) return h;
          if (this.isFormElement(h)) return new FormData(h);
          if (this.isObject(h)) {
            var w = new FormData();
            return Object.keys(h).forEach(function(k) {
              var v = h[k];
              w.append(k, v);
            }), w;
          }
          throw new Error("`data` must be an instance of Object, FormData or <FORM> HTMLElement");
        } }, { key: "isObject", value: function(h) {
          return Object.prototype.toString.call(h) === "[object Object]";
        } }, { key: "isFormData", value: function(h) {
          return h instanceof FormData;
        } }, { key: "isFormElement", value: function(h) {
          return h instanceof HTMLFormElement;
        } }, { key: "selectFiles", value: function() {
          var h = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          return new Promise(function(w, k) {
            var v = document.createElement("INPUT");
            v.type = "file", h.multiple && v.setAttribute("multiple", "multiple"), h.accept && v.setAttribute("accept", h.accept), v.style.display = "none", document.body.appendChild(v), v.addEventListener("change", function(t) {
              var r = t.target.files;
              w(r), document.body.removeChild(v);
            }, !1), v.click();
          });
        } }, { key: "parseHeaders", value: function(h) {
          var w = h.trim().split(/[\r\n]+/), k = {};
          return w.forEach(function(v) {
            var t = v.split(": "), r = t.shift(), d = t.join(": ");
            r && (k[r] = d);
          }), k;
        } }], (u = null) && n(p.prototype, u), f && n(p, f), s;
      }();
    }, function(o, l) {
      var e = function(a) {
        return encodeURIComponent(a).replace(/[!'()*]/g, escape).replace(/%20/g, "+");
      }, n = function(a, s, p, u) {
        return s = s || null, p = p || "&", u = u || null, a ? function(f) {
          for (var h = new Array(), w = 0; w < f.length; w++) f[w] && h.push(f[w]);
          return h;
        }(Object.keys(a).map(function(f) {
          var h, w, k = f;
          if (u && (k = u + "[" + k + "]"), typeof a[f] == "object" && a[f] !== null) h = n(a[f], null, p, k);
          else {
            s && (w = k, k = !isNaN(parseFloat(w)) && isFinite(w) ? s + Number(k) : k);
            var v = a[f];
            v = (v = (v = (v = v === !0 ? "1" : v) === !1 ? "0" : v) === 0 ? "0" : v) || "", h = e(k) + "=" + e(v);
          }
          return h;
        })).join(p).replace(/[!'()*]/g, "") : "";
      };
      o.exports = n;
    }]);
  });
})(R);
var q = R.exports;
const F = /* @__PURE__ */ B(q);
function O(C) {
  return C !== void 0 && typeof C.then == "function";
}
class A {
  /**
   * @param params - uploader module params
   * @param params.config - image tool config
   * @param params.onUpload - one callback for all uploading (file, url, d-n-d, pasting)
   * @param params.onError - callback for uploading errors
   */
  constructor({ config: i, onUpload: o, onError: l }) {
    this.config = i, this.onUpload = o, this.onError = l;
  }
  /**
   * Handle clicks on the upload file button
   * Fires ajax.transport()
   * @param onPreview - callback fired when preview is ready
   */
  uploadSelectedFile({ onPreview: i }) {
    const o = function(e) {
      const n = new FileReader();
      n.readAsDataURL(e), n.onload = (a) => {
        i(a.target.result);
      };
    };
    let l;
    if (this.config.onSelectFile && typeof this.config.onSelectFile == "function") {
      try {
        this.config.onSelectFile(
          // onUpload callback
          (e) => {
            e.success && e.file && e.file.url ? (i(e.file.url), this.onUpload(e)) : this.onError("Invalid response format");
          },
          // onError callback
          this.onError
        );
      } catch (e) {
        const n = e;
        this.onError(
          `File selection error: ${n.message || "Unknown error"}`
        );
      }
      return;
    } else if (this.config.uploader && typeof this.config.uploader.uploadByFile == "function") {
      const e = this.config.uploader.uploadByFile;
      l = F.selectFiles({ accept: this.config.types ?? "image/*" }).then((n) => {
        o(n[0]);
        const a = e(n[0]);
        return O(a) || console.warn(
          "Custom uploader method uploadByFile should return a Promise"
        ), a;
      });
    } else
      l = F.transport({
        url: this.config.endpoints.byFile,
        data: this.config.additionalRequestData,
        accept: this.config.types ?? "image/*",
        headers: this.config.additionalRequestHeaders,
        beforeSend: (e) => {
          o(e[0]);
        },
        fieldName: this.config.field ?? "image"
      }).then(
        (e) => e.body
      );
    l.then((e) => {
      this.onUpload(e);
    }).catch((e) => {
      this.onError(e);
    });
  }
  /**
   * Handle clicks on the upload file button
   * Fires ajax.post()
   * @param url - image source url
   */
  uploadByUrl(i) {
    let o;
    this.config.uploader && typeof this.config.uploader.uploadByUrl == "function" ? (o = this.config.uploader.uploadByUrl(i), O(o) || console.warn(
      "Custom uploader method uploadByUrl should return a Promise"
    )) : o = F.post({
      url: this.config.endpoints.byUrl,
      data: Object.assign(
        {
          url: i
        },
        this.config.additionalRequestData
      ),
      type: F.contentType.JSON,
      headers: this.config.additionalRequestHeaders
    }).then(
      (l) => l.body
    ), o.then((l) => {
      this.onUpload(l);
    }).catch((l) => {
      this.onError(l);
    });
  }
  /**
   * Handle clicks on the upload file button
   * Fires ajax.post()
   * @param file - file pasted by drag-n-drop
   * @param onPreview - file pasted by drag-n-drop
   */
  uploadByFile(i, { onPreview: o }) {
    const l = new FileReader();
    l.readAsDataURL(i), l.onload = (n) => {
      o(n.target.result);
    };
    let e;
    if (this.config.uploader && typeof this.config.uploader.uploadByFile == "function")
      e = this.config.uploader.uploadByFile(i), O(e) || console.warn(
        "Custom uploader method uploadByFile should return a Promise"
      );
    else {
      const n = new FormData();
      n.append(this.config.field ?? "image", i), this.config.additionalRequestData && Object.keys(this.config.additionalRequestData).length && Object.entries(this.config.additionalRequestData).forEach(
        ([a, s]) => {
          n.append(a, s);
        }
      ), e = F.post({
        url: this.config.endpoints.byFile,
        data: n,
        type: F.contentType.JSON,
        headers: this.config.additionalRequestHeaders
      }).then(
        (a) => a.body
      );
    }
    e.then((n) => {
      this.onUpload(n);
    }).catch((n) => {
      this.onError(n);
    });
  }
}
/**
 * Image Tool for the Editor.js
 * @author CodeX <team@codex.so>
 * @license MIT
 * @see {@link https://github.com/editor-js/image}
 *
 * To developers.
 * To simplify Tool structure, we split it to 4 parts:
 *  1) index.ts — main Tool's interface, public API and methods for working with data
 *  2) uploader.ts — module that has methods for sending files via AJAX: from device, by URL or File pasting
 *  3) ui.ts — module for UI manipulations: render, showing preloader, etc
 *
 * For debug purposes there is a testing server
 * that can save uploaded files and return a Response {@link UploadResponseFormat}
 *
 *       $ node dev/server.js
 *
 * It will expose 8008 port, so you can pass http://localhost:8008 with the Tools config:
 *
 * image: {
 *   class: ImageTool,
 *   config: {
 *     endpoints: {
 *       byFile: 'http://localhost:8008/uploadFile',
 *       byUrl: 'http://localhost:8008/fetchUrl',
 *     }
 *   },
 * },
 */
class L {
  /**
   * @param tool - tool properties got from editor.js
   * @param tool.data - previously saved data
   * @param tool.config - user config for Tool
   * @param tool.api - Editor.js API
   * @param tool.readOnly - read-only mode flag
   * @param tool.block - current Block API
   */
  constructor({
    data: i,
    config: o,
    api: l,
    readOnly: e,
    block: n
  }) {
    this.isCaptionEnabled = null, this.isLinkEnabled = null, this.api = l, this.block = n, this.config = {
      endpoints: o.endpoints,
      additionalRequestData: o.additionalRequestData,
      additionalRequestHeaders: o.additionalRequestHeaders,
      field: o.field,
      types: o.types,
      captionPlaceholder: this.api.i18n.t(
        o.captionPlaceholder ?? "Caption"
      ),
      linkPlaceholder: this.api.i18n.t(o.linkPlaceholder ?? "Link"),
      buttonContent: o.buttonContent,
      uploader: o.uploader,
      onSelectFile: o.onSelectFile,
      // Add support for custom file selection
      actions: o.actions,
      features: o.features || {}
    }, this.uploader = new A({
      config: this.config,
      onUpload: (a) => this.onUpload(a),
      onError: (a) => this.uploadingFailed(a)
    }), this.ui = new x({
      api: l,
      config: this.config,
      onSelectFile: () => {
        this.uploader.uploadSelectedFile({
          onPreview: (a) => {
            this.ui.showPreloader(a);
          }
        });
      },
      readOnly: e,
      onImageDimensionsReady: (a, s) => {
        this._data.file && (this._data.file.width = a, this._data.file.height = s, console.log("Image dimensions detected:", {
          width: a,
          height: s,
          fileData: this._data.file,
          fullData: this._data
        }));
      }
    }), this._data = {
      caption: "",
      link: "",
      withBorder: !1,
      withBackground: !1,
      stretched: !1,
      file: {
        url: ""
      }
    }, this.data = i;
  }
  /**
   * Notify core that read-only mode is supported
   */
  static get isReadOnlySupported() {
    return !0;
  }
  /**
   * Get Tool toolbox settings
   * icon - Tool icon's SVG
   * title - title to show in toolbox
   */
  static get toolbox() {
    return {
      icon: H,
      title: "Image"
    };
  }
  /**
   * Available image tools
   */
  static get tunes() {
    return [
      {
        name: "withBorder",
        icon: D,
        title: "With border",
        toggle: !0
      },
      {
        name: "stretched",
        icon: U,
        title: "Stretch image",
        toggle: !0
      },
      {
        name: "withBackground",
        icon: I,
        title: "With background",
        toggle: !0
      }
    ];
  }
  /**
   * Renders Block content
   */
  render() {
    var i, o, l, e, n;
    return console.log("Rendering image block with data:", {
      url: this._data.file.url,
      width: this._data.file.width,
      height: this._data.file.height,
      caption: this._data.caption,
      link: this._data.link,
      fullData: this._data
    }), (((i = this.config.features) == null ? void 0 : i.caption) === !0 || ((o = this.config.features) == null ? void 0 : o.caption) === void 0 || ((l = this.config.features) == null ? void 0 : l.caption) === "optional" && this.data.caption) && (this.isCaptionEnabled = !0, this.ui.applyTune("caption", !0)), (((e = this.config.features) == null ? void 0 : e.link) === !0 || ((n = this.config.features) == null ? void 0 : n.link) === "optional" && this.data.link) && (this.isLinkEnabled = !0, this.ui.applyTune("link", !0)), this.ui.render();
  }
  /**
   * Validate data: check if Image exists
   * @param savedData — data received after saving
   * @returns false if saved data is not correct, otherwise true
   */
  validate(i) {
    return !!i.file.url;
  }
  /**
   * Return Block data
   */
  save() {
    const i = this.ui.nodes.caption, o = this.ui.nodes.link;
    return this._data.caption = i.innerHTML, this._data.link = o.innerHTML, console.log("Saving image data:", {
      caption: this._data.caption,
      link: this._data.link,
      file: this._data.file,
      dimensions: {
        width: this._data.file.width,
        height: this._data.file.height
      },
      fullData: this._data
    }), this.data;
  }
  /**
   * Returns configuration for block tunes: add background, add border, stretch image
   * @returns TunesMenuConfig
   */
  renderSettings() {
    var n, a;
    const i = L.tunes.concat(this.config.actions || []), o = {
      border: "withBorder",
      background: "withBackground",
      stretch: "stretched",
      caption: "caption",
      link: "link"
    };
    ((n = this.config.features) == null ? void 0 : n.caption) === "optional" && i.push({
      name: "caption",
      icon: P,
      title: "With caption",
      toggle: !0
    }), ((a = this.config.features) == null ? void 0 : a.link) === "optional" && i.push({
      name: "link",
      icon: P,
      title: "With link",
      toggle: !0
    });
    const l = i.filter((s) => {
      var u, f, h;
      const p = Object.keys(o).find(
        (w) => o[w] === s.name
      );
      return p === "caption" ? ((u = this.config.features) == null ? void 0 : u.caption) !== !1 : p === "link" ? ((f = this.config.features) == null ? void 0 : f.link) !== !1 : p == null || ((h = this.config.features) == null ? void 0 : h[p]) !== !1;
    }), e = (s) => {
      let p = this.data[s.name];
      return s.name === "caption" && (p = this.isCaptionEnabled ?? p), s.name === "link" && (p = this.isLinkEnabled ?? p), p;
    };
    return l.map((s) => ({
      icon: s.icon,
      label: this.api.i18n.t(s.title),
      name: s.name,
      toggle: s.toggle,
      isActive: e(s),
      onActivate: () => {
        if (typeof s.action == "function") {
          s.action(s.name);
          return;
        }
        let p = !e(s);
        s.name === "caption" && (this.isCaptionEnabled = !(this.isCaptionEnabled ?? !1), p = this.isCaptionEnabled), s.name === "link" && (this.isLinkEnabled = !(this.isLinkEnabled ?? !1), p = this.isLinkEnabled), this.tuneToggled(s.name, p);
      }
    }));
  }
  /**
   * Fires after clicks on the Toolbox Image Icon
   * Initiates click on the Select File button
   */
  appendCallback() {
    this.ui.nodes.fileButton.click();
  }
  /**
   * Specify paste substitutes
   * @see {@link https://github.com/codex-team/editor.js/blob/master/docs/tools.md#paste-handling}
   */
  static get pasteConfig() {
    return {
      /**
       * Paste HTML into Editor
       */
      tags: [
        {
          img: { src: !0 }
        }
      ],
      /**
       * Paste URL of image into the Editor
       */
      patterns: {
        image: /https?:\/\/\S+\.(gif|jpe?g|tiff|png|svg|webp)(\?[a-z0-9=]*)?$/i
      },
      /**
       * Drag n drop file from into the Editor
       */
      files: {
        mimeTypes: ["image/*"]
      }
    };
  }
  /**
   * Specify paste handlers
   * @see {@link https://github.com/codex-team/editor.js/blob/master/docs/tools.md#paste-handling}
   * @param event - editor.js custom paste event
   *                              {@link https://github.com/codex-team/editor.js/blob/master/types/tools/paste-events.d.ts}
   */
  async onPaste(i) {
    switch (i.type) {
      case "tag": {
        const o = i.detail.data;
        if (/^blob:/.test(o.src)) {
          const e = await (await fetch(o.src)).blob();
          this.uploadFile(e);
          break;
        }
        this.uploadUrl(o.src);
        break;
      }
      case "pattern": {
        const o = i.detail.data;
        this.uploadUrl(o);
        break;
      }
      case "file": {
        const o = i.detail.file;
        this.uploadFile(o);
        break;
      }
    }
  }
  /**
   * Private methods
   * ̿̿ ̿̿ ̿̿ ̿'̿'\̵͇̿̿\з= ( ▀ ͜͞ʖ▀) =ε/̵͇̿̿/’̿’̿ ̿ ̿̿ ̿̿ ̿̿
   */
  /**
   * Stores all Tool's data
   * @param data - data in Image Tool format
   */
  set data(i) {
    var o, l;
    this.image = i.file, this._data.caption = i.caption || "", this._data.link = i.link || "", this.ui.fillCaption(this._data.caption), this.ui.fillLink(this._data.link), L.tunes.forEach(({ name: e }) => {
      const n = typeof i[e] < "u" ? i[e] === !0 || i[e] === "true" : !1;
      this.setTune(e, n);
    }), i.caption ? this.setTune("caption", !0) : ((o = this.config.features) == null ? void 0 : o.caption) === !0 && this.setTune("caption", !0), i.link ? this.setTune("link", !0) : ((l = this.config.features) == null ? void 0 : l.link) === !0 && this.setTune("link", !0);
  }
  /**
   * Return Tool data
   */
  get data() {
    return this._data;
  }
  /**
   * Set new image file
   * @param file - uploaded file data
   */
  set image(i) {
    var e, n;
    const o = (e = this._data.file) == null ? void 0 : e.width, l = (n = this._data.file) == null ? void 0 : n.height;
    this._data.file = i || { url: "" }, i && i.url && (o !== void 0 && l !== void 0 && i.width === void 0 && i.height === void 0 && (this._data.file.width = o, this._data.file.height = l), this.ui.fillImage(i.url));
  }
  /**
   * File uploading callback
   * @param response - uploading server response
   */
  onUpload(i) {
    if (i.success && i.file) {
      const o = {
        url: i.file.url
      };
      i.file.width !== void 0 && (o.width = i.file.width), i.file.height !== void 0 && (o.height = i.file.height), this.image = o, console.log("Image uploaded successfully:", {
        responseFile: i.file,
        imageSetterParam: o,
        currentData: this._data,
        customFileSelection: !!this.config.onSelectFile
      });
    } else
      this.uploadingFailed("incorrect response: " + JSON.stringify(i));
  }
  /**
   * Handle uploader errors
   * @param errorText - uploading error info
   */
  uploadingFailed(i) {
    console.log("Image Tool: uploading failed because of", i), this.api.notifier.show({
      message: this.api.i18n.t("Couldn’t upload image. Please try another."),
      style: "error"
    }), this.ui.hidePreloader();
  }
  /**
   * Callback fired when Block Tune is activated
   * @param tuneName - tune that has been clicked
   * @param state - new state
   */
  tuneToggled(i, o) {
    i === "caption" ? (this.ui.applyTune(i, o), o == !1 && (this._data.caption = "", this.ui.fillCaption(""))) : i === "link" ? (this.ui.applyTune(i, o), o == !1 && (this._data.link = "", this.ui.fillLink(""))) : this.setTune(i, o);
  }
  /**
   * Set one tune
   * @param tuneName - {@link Tunes.tunes}
   * @param value - tune state
   */
  setTune(i, o) {
    this._data[i] = o, this.ui.applyTune(i, o), i === "stretched" && Promise.resolve().then(() => {
      this.block.stretched = o;
    }).catch((l) => {
      console.error(l);
    });
  }
  /**
   * Show preloader and upload image file
   * @param file - file that is currently uploading (from paste)
   */
  uploadFile(i) {
    this.uploader.uploadByFile(i, {
      onPreview: (o) => {
        this.ui.showPreloader(o);
      }
    });
  }
  /**
   * Show preloader and upload image by target url
   * @param url - url pasted
   */
  uploadUrl(i) {
    this.ui.showPreloader(i), this.uploader.uploadByUrl(i);
  }
}
export {
  L as default
};
